@using Infiniteskills.Helpers
@{
    ViewData["Title"] = "Index";
}
<div class="row">
    <div class="col-lg-12">
        <nav class="btn-toolbar text-left titleuser">
            <a href="#" data-toggle="sidebar"><span class="glyphicon glyphicon-option-vertical"></span></a>
            <label> Listado Bienes Servicio</label>
        </nav>
    </div>
</div>
@Html.CRM().MenuBar("MenuBar", "onClickMenuBar", new ItemMenuBar[]{
                                       new ItemMenuBar(MenuBarButtonType.New),
                                       new ItemMenuBar(MenuBarButtonType.Edit),
                                       new ItemMenuBar(MenuBarButtonType.ExportXls),
                                       new ItemMenuBar(MenuBarButtonType.Delete,true)
                                   })
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-body form-horizontal" id="panelSeach">
                <div class="col-lg-11">
                    <div class="form-group">
                        @Html.CRM().TextBox("Descripcion", null, "col-lg-4", "Nombre", "col-lg-2").Attributes(new { @maxlength = "100", @placeholder = "Nombre" })
                        @Html.CRM().TextBox("Marca", null, "col-lg-4", "Marca", "col-lg-2").Attributes(new { @maxlength = "100", @placeholder = "Marca" })
                    </div>
                    <div class="form-group">
                        @Html.CRM().TextBox("Proveedor", null, "col-lg-4", "Proveedor", "col-lg-2").Attributes(new { @maxlength = "100", @placeholder = "Proveedor" })
                        @Html.CRM().Select2List("CategoriaId", null, @ViewBag.ListCategoria, "col-lg-4", "Categoria", "col-lg-2")
                    </div>
                </div>
                <div class="col-lg-1">
                    <div class="form-group">
                        @(Html.CRM().InputButton("buttonBuscar", new { Styles = "width:100%" }).ElementType(ButtonElementType.Button).Value("Buscar").OnClick("$('#jqGridProducto').jqGrid('setGridParam',{datatype:'json'}).trigger('reloadGrid');"))
                    </div>
                    <div class="form-group">
                        @(Html.CRM().InputButton("buttonBuscar", new { Styles = "width:100%" }).ElementType(ButtonElementType.Button).Value("Limpiar").OnClick("$('input:text').val(''); $('#jqGridProducto').jqGrid('setGridParam',{datatype:'json'}).trigger('reloadGrid');$('#CategoriaId').val(null).trigger('change'); "))
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-12" id="bandeja">
        <div class="panel panel-default">
            <div class="panel-body" id="panel">
                <table id="jqGridProducto"></table>
                <div id="jqGridPager"></div>
            </div>
        </div>
    </div>
</div>

@using (Html.CRM().Popup("myModal", "File Upload", "onClickOkFileUpload", SizePopup.Small))
{
    <div id="modalContent">
        <form class="form-horizontal">
            <div class="form-group">
                <label class="control-label col-lg-2">Archivo</label>
                <div class="col-lg-12">
                    <input type="file" name="fileUpload" id="fileUpload" class="form-control" />
                </div>
            </div>
        </form>
    </div>
}


<script type="text/javascript">
    var _heightGrid = getHeightForResize(75);
    var _widthPanel = $("#panel").width();
    $(document).ready(function () {

        $("#jqGridProducto").jqGrid({
            url: '@Url.Action("ListarBandeja", "BienServicio", new { area = "LG" })',
            mtype: "POST",
            postData: {
                descripcion: function () { return $("#Descripcion").val() },
                marca: function () { return $("#Marca").val() },
                proveedor: function () { return $("#Proveedor").val() },
                categoriaId: function () { return $("#CategoriaId").val() },
            },
            datatype: "json",
            colModel: [
                { label: 'Id', name: 'BienServicioId', key: true, hidden: true },
                { label: 'Código', name: 'Codigo', width: 22 },
                { label: 'Categoria', name: 'Categoria', width: 35 },
                { label: 'Descripción', name: 'Descripcion', width: 120 },
                { label: 'Marca', name: 'Marca', width: 35 },
                { label: 'U.M', name: 'UnidadMedida', width: 10 },
                { label: 'Stock Min.', name: 'StockMinimo', hidden: true, formatter: 'integer', align: 'right', formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },
                { label: 'Stock Max.', name: 'StockMaximo', hidden: true, formatter: 'integer', align: 'right', formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },
                { label: 'Precio Compra', name: 'PrecioCompra', width: 25, formatter: 'integer', align: 'right', formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },
                { label: 'Precio Unitario', name: 'PrecioUnitario', width: 25, formatter: 'integer', align: 'right', formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } },
                { label: 'Precio Venta', name: 'PrecioVenta', width: 25, formatter: 'integer', align: 'right', formatoptions: { decimalSeparator: ".", thousandsSeparator: " ", decimalPlaces: 2 } }
            ],
            viewrecords: true,
            loadonce: true,
            height: (_heightGrid - 240),
            width: _widthPanel,
            rowNum: 20,
            rowList: [10, 20, 30],
            pager: "#jqGridPager"
        });
    });

    function onClickMenuBar(key) {

        var postData = {
            editAction: '',
            bienServicioId: 0
        };
        var row = getGridSelectedRow("jqGridProducto");
        switch (key) {
            case "@ButtonMenuBarActionConstant.NEW":
                postData.editAction = '@EditActionConstant.NEW';
                controllerGetAction('@Url.Action("Create", "BienServicio", new { area = "LG" })', postData, 'workspace', true, true, null);
                break;
            case "@ButtonMenuBarActionConstant.EDIT":
                if (!isEmpty(row)) {
                    postData.editAction = '@EditActionConstant.EDIT';
                    postData.bienServicioId = row.BienServicioId;
                    controllerGetAction('@Url.Action("Create", "BienServicio", new { area = "LG" })', postData, 'workspace', true, true, null);
                } else {
                    MsgAlert(3, 'Seleccione un Bien Servicio');
                }
                break;
             case "@ButtonMenuBarActionConstant.IMPORT_XLS":
                $("#myModal").modal('show');
                break;
        }
    };



</script>

